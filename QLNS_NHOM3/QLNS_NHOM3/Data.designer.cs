#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLNS_NHOM3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNS")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBACLUONG(BACLUONG instance);
    partial void UpdateBACLUONG(BACLUONG instance);
    partial void DeleteBACLUONG(BACLUONG instance);
    partial void InsertTDNN(TDNN instance);
    partial void UpdateTDNN(TDNN instance);
    partial void DeleteTDNN(TDNN instance);
    partial void InsertCHINHANH(CHINHANH instance);
    partial void UpdateCHINHANH(CHINHANH instance);
    partial void DeleteCHINHANH(CHINHANH instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertCHUYENMON(CHUYENMON instance);
    partial void UpdateCHUYENMON(CHUYENMON instance);
    partial void DeleteCHUYENMON(CHUYENMON instance);
    partial void InsertCT_HDLD(CT_HDLD instance);
    partial void UpdateCT_HDLD(CT_HDLD instance);
    partial void DeleteCT_HDLD(CT_HDLD instance);
    partial void InsertHDLD(HDLD instance);
    partial void UpdateHDLD(HDLD instance);
    partial void DeleteHDLD(HDLD instance);
    partial void InsertLUONG(LUONG instance);
    partial void UpdateLUONG(LUONG instance);
    partial void DeleteLUONG(LUONG instance);
    partial void InsertLUONG_K2(LUONG_K2 instance);
    partial void UpdateLUONG_K2(LUONG_K2 instance);
    partial void DeleteLUONG_K2(LUONG_K2 instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNV_CV(NV_CV instance);
    partial void UpdateNV_CV(NV_CV instance);
    partial void DeleteNV_CV(NV_CV instance);
    partial void InsertNV_TDNN(NV_TDNN instance);
    partial void UpdateNV_TDNN(NV_TDNN instance);
    partial void DeleteNV_TDNN(NV_TDNN instance);
    partial void InsertPHONGBAN(PHONGBAN instance);
    partial void UpdatePHONGBAN(PHONGBAN instance);
    partial void DeletePHONGBAN(PHONGBAN instance);
    partial void InsertTDHV(TDHV instance);
    partial void UpdateTDHV(TDHV instance);
    partial void DeleteTDHV(TDHV instance);
    #endregion
		
		public DataDataContext() : 
				base(global::QLNS_NHOM3.Properties.Settings.Default.QLNSConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BACLUONG> BACLUONGs
		{
			get
			{
				return this.GetTable<BACLUONG>();
			}
		}
		
		public System.Data.Linq.Table<TDNN> TDNNs
		{
			get
			{
				return this.GetTable<TDNN>();
			}
		}
		
		public System.Data.Linq.Table<CHINHANH> CHINHANHs
		{
			get
			{
				return this.GetTable<CHINHANH>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<CHUYENMON> CHUYENMONs
		{
			get
			{
				return this.GetTable<CHUYENMON>();
			}
		}
		
		public System.Data.Linq.Table<CT_HDLD> CT_HDLDs
		{
			get
			{
				return this.GetTable<CT_HDLD>();
			}
		}
		
		public System.Data.Linq.Table<HDLD> HDLDs
		{
			get
			{
				return this.GetTable<HDLD>();
			}
		}
		
		public System.Data.Linq.Table<LUONG> LUONGs
		{
			get
			{
				return this.GetTable<LUONG>();
			}
		}
		
		public System.Data.Linq.Table<LUONG_K2> LUONG_K2s
		{
			get
			{
				return this.GetTable<LUONG_K2>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NV_CV> NV_CVs
		{
			get
			{
				return this.GetTable<NV_CV>();
			}
		}
		
		public System.Data.Linq.Table<NV_TDNN> NV_TDNNs
		{
			get
			{
				return this.GetTable<NV_TDNN>();
			}
		}
		
		public System.Data.Linq.Table<PHONGBAN> PHONGBANs
		{
			get
			{
				return this.GetTable<PHONGBAN>();
			}
		}
		
		public System.Data.Linq.Table<TDHV> TDHVs
		{
			get
			{
				return this.GetTable<TDHV>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BACLUONG")]
	public partial class BACLUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BacLuong1;
		
		private double _HSLuong;
		
		private EntitySet<LUONG> _LUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBacLuong1Changing(int value);
    partial void OnBacLuong1Changed();
    partial void OnHSLuongChanging(double value);
    partial void OnHSLuongChanged();
    #endregion
		
		public BACLUONG()
		{
			this._LUONGs = new EntitySet<LUONG>(new Action<LUONG>(this.attach_LUONGs), new Action<LUONG>(this.detach_LUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BacLuong", Storage="_BacLuong1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BacLuong1
		{
			get
			{
				return this._BacLuong1;
			}
			set
			{
				if ((this._BacLuong1 != value))
				{
					this.OnBacLuong1Changing(value);
					this.SendPropertyChanging();
					this._BacLuong1 = value;
					this.SendPropertyChanged("BacLuong1");
					this.OnBacLuong1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSLuong", DbType="Float NOT NULL")]
		public double HSLuong
		{
			get
			{
				return this._HSLuong;
			}
			set
			{
				if ((this._HSLuong != value))
				{
					this.OnHSLuongChanging(value);
					this.SendPropertyChanging();
					this._HSLuong = value;
					this.SendPropertyChanged("HSLuong");
					this.OnHSLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACLUONG_LUONG", Storage="_LUONGs", ThisKey="BacLuong1", OtherKey="BacLuong")]
		public EntitySet<LUONG> LUONGs
		{
			get
			{
				return this._LUONGs;
			}
			set
			{
				this._LUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.BACLUONG1 = this;
		}
		
		private void detach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.BACLUONG1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDNN")]
	public partial class TDNN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTDNN;
		
		private string _TenTDNN;
		
		private string _TrinhDo;
		
		private EntitySet<NV_TDNN> _NV_TDNNs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTDNNChanging(string value);
    partial void OnMaTDNNChanged();
    partial void OnTenTDNNChanging(string value);
    partial void OnTenTDNNChanged();
    partial void OnTrinhDoChanging(string value);
    partial void OnTrinhDoChanged();
    #endregion
		
		public TDNN()
		{
			this._NV_TDNNs = new EntitySet<NV_TDNN>(new Action<NV_TDNN>(this.attach_NV_TDNNs), new Action<NV_TDNN>(this.detach_NV_TDNNs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTDNN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTDNN
		{
			get
			{
				return this._MaTDNN;
			}
			set
			{
				if ((this._MaTDNN != value))
				{
					this.OnMaTDNNChanging(value);
					this.SendPropertyChanging();
					this._MaTDNN = value;
					this.SendPropertyChanged("MaTDNN");
					this.OnMaTDNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTDNN", DbType="NVarChar(50)")]
		public string TenTDNN
		{
			get
			{
				return this._TenTDNN;
			}
			set
			{
				if ((this._TenTDNN != value))
				{
					this.OnTenTDNNChanging(value);
					this.SendPropertyChanging();
					this._TenTDNN = value;
					this.SendPropertyChanged("TenTDNN");
					this.OnTenTDNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrinhDo", DbType="NVarChar(50)")]
		public string TrinhDo
		{
			get
			{
				return this._TrinhDo;
			}
			set
			{
				if ((this._TrinhDo != value))
				{
					this.OnTrinhDoChanging(value);
					this.SendPropertyChanging();
					this._TrinhDo = value;
					this.SendPropertyChanged("TrinhDo");
					this.OnTrinhDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDNN_NV_TDNN", Storage="_NV_TDNNs", ThisKey="MaTDNN", OtherKey="MaTDNN")]
		public EntitySet<NV_TDNN> NV_TDNNs
		{
			get
			{
				return this._NV_TDNNs;
			}
			set
			{
				this._NV_TDNNs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NV_TDNNs(NV_TDNN entity)
		{
			this.SendPropertyChanging();
			entity.TDNN = this;
		}
		
		private void detach_NV_TDNNs(NV_TDNN entity)
		{
			this.SendPropertyChanging();
			entity.TDNN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHINHANH")]
	public partial class CHINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCN;
		
		private string _TenCN;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCNChanging(string value);
    partial void OnMaCNChanged();
    partial void OnTenCNChanging(string value);
    partial void OnTenCNChanged();
    #endregion
		
		public CHINHANH()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCN
		{
			get
			{
				return this._MaCN;
			}
			set
			{
				if ((this._MaCN != value))
				{
					this.OnMaCNChanging(value);
					this.SendPropertyChanging();
					this._MaCN = value;
					this.SendPropertyChanged("MaCN");
					this.OnMaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenCN
		{
			get
			{
				return this._TenCN;
			}
			set
			{
				if ((this._TenCN != value))
				{
					this.OnTenCNChanging(value);
					this.SendPropertyChanging();
					this._TenCN = value;
					this.SendPropertyChanged("TenCN");
					this.OnTenCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHINHANH_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaCN", OtherKey="MaCN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHINHANH = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHINHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCV;
		
		private string _TenCV;
		
		private System.Nullable<int> _PhuCap;
		
		private EntitySet<NV_CV> _NV_CVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    partial void OnTenCVChanging(string value);
    partial void OnTenCVChanged();
    partial void OnPhuCapChanging(System.Nullable<int> value);
    partial void OnPhuCapChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NV_CVs = new EntitySet<NV_CV>(new Action<NV_CV>(this.attach_NV_CVs), new Action<NV_CV>(this.detach_NV_CVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenCV
		{
			get
			{
				return this._TenCV;
			}
			set
			{
				if ((this._TenCV != value))
				{
					this.OnTenCVChanging(value);
					this.SendPropertyChanging();
					this._TenCV = value;
					this.SendPropertyChanged("TenCV");
					this.OnTenCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuCap", DbType="Int")]
		public System.Nullable<int> PhuCap
		{
			get
			{
				return this._PhuCap;
			}
			set
			{
				if ((this._PhuCap != value))
				{
					this.OnPhuCapChanging(value);
					this.SendPropertyChanging();
					this._PhuCap = value;
					this.SendPropertyChanged("PhuCap");
					this.OnPhuCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NV_CV", Storage="_NV_CVs", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<NV_CV> NV_CVs
		{
			get
			{
				return this._NV_CVs;
			}
			set
			{
				this._NV_CVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NV_CVs(NV_CV entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NV_CVs(NV_CV entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUYENMON")]
	public partial class CHUYENMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCM;
		
		private string _TenCM;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCMChanging(string value);
    partial void OnMaCMChanged();
    partial void OnTenCMChanging(string value);
    partial void OnTenCMChanged();
    #endregion
		
		public CHUYENMON()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCM", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCM
		{
			get
			{
				return this._MaCM;
			}
			set
			{
				if ((this._MaCM != value))
				{
					this.OnMaCMChanging(value);
					this.SendPropertyChanging();
					this._MaCM = value;
					this.SendPropertyChanged("MaCM");
					this.OnMaCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenCM
		{
			get
			{
				return this._TenCM;
			}
			set
			{
				if ((this._TenCM != value))
				{
					this.OnTenCMChanging(value);
					this.SendPropertyChanging();
					this._TenCM = value;
					this.SendPropertyChanged("TenCM");
					this.OnTenCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENMON_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaCM", OtherKey="MaCM")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENMON = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUYENMON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HDLD")]
	public partial class CT_HDLD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaNV;
		
		private System.DateTime _NgayBD;
		
		private System.DateTime _NgayKT;
		
		private string _GhiChu;
		
		private EntityRef<HDLD> _HDLD;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayBDChanging(System.DateTime value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.DateTime value);
    partial void OnNgayKTChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public CT_HDLD()
		{
			this._HDLD = default(EntityRef<HDLD>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HDLD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date NOT NULL")]
		public System.DateTime NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date NOT NULL")]
		public System.DateTime NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDLD_CT_HDLD", Storage="_HDLD", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HDLD HDLD
		{
			get
			{
				return this._HDLD.Entity;
			}
			set
			{
				HDLD previousValue = this._HDLD.Entity;
				if (((previousValue != value) 
							|| (this._HDLD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDLD.Entity = null;
						previousValue.CT_HDLDs.Remove(this);
					}
					this._HDLD.Entity = value;
					if ((value != null))
					{
						value.CT_HDLDs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HDLD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CT_HDLD", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CT_HDLDs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CT_HDLDs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDLD")]
	public partial class HDLD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _TenHD;
		
		private string _LoaiHD;
		
		private EntitySet<CT_HDLD> _CT_HDLDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnTenHDChanging(string value);
    partial void OnTenHDChanged();
    partial void OnLoaiHDChanging(string value);
    partial void OnLoaiHDChanged();
    #endregion
		
		public HDLD()
		{
			this._CT_HDLDs = new EntitySet<CT_HDLD>(new Action<CT_HDLD>(this.attach_CT_HDLDs), new Action<CT_HDLD>(this.detach_CT_HDLDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHD
		{
			get
			{
				return this._TenHD;
			}
			set
			{
				if ((this._TenHD != value))
				{
					this.OnTenHDChanging(value);
					this.SendPropertyChanging();
					this._TenHD = value;
					this.SendPropertyChanged("TenHD");
					this.OnTenHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiHD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoaiHD
		{
			get
			{
				return this._LoaiHD;
			}
			set
			{
				if ((this._LoaiHD != value))
				{
					this.OnLoaiHDChanging(value);
					this.SendPropertyChanging();
					this._LoaiHD = value;
					this.SendPropertyChanged("LoaiHD");
					this.OnLoaiHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDLD_CT_HDLD", Storage="_CT_HDLDs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CT_HDLD> CT_HDLDs
		{
			get
			{
				return this._CT_HDLDs;
			}
			set
			{
				this._CT_HDLDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDLDs(CT_HDLD entity)
		{
			this.SendPropertyChanging();
			entity.HDLD = this;
		}
		
		private void detach_CT_HDLDs(CT_HDLD entity)
		{
			this.SendPropertyChanging();
			entity.HDLD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG")]
	public partial class LUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private int _BacLuong;
		
		private System.DateTime _NgayLenLuong;
		
		private EntityRef<BACLUONG> _BACLUONG1;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnBacLuongChanging(int value);
    partial void OnBacLuongChanged();
    partial void OnNgayLenLuongChanging(System.DateTime value);
    partial void OnNgayLenLuongChanged();
    #endregion
		
		public LUONG()
		{
			this._BACLUONG1 = default(EntityRef<BACLUONG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BacLuong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BacLuong
		{
			get
			{
				return this._BacLuong;
			}
			set
			{
				if ((this._BacLuong != value))
				{
					if (this._BACLUONG1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBacLuongChanging(value);
					this.SendPropertyChanging();
					this._BacLuong = value;
					this.SendPropertyChanged("BacLuong");
					this.OnBacLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLenLuong", DbType="Date NOT NULL")]
		public System.DateTime NgayLenLuong
		{
			get
			{
				return this._NgayLenLuong;
			}
			set
			{
				if ((this._NgayLenLuong != value))
				{
					this.OnNgayLenLuongChanging(value);
					this.SendPropertyChanging();
					this._NgayLenLuong = value;
					this.SendPropertyChanged("NgayLenLuong");
					this.OnNgayLenLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACLUONG_LUONG", Storage="_BACLUONG1", ThisKey="BacLuong", OtherKey="BacLuong1", IsForeignKey=true)]
		public BACLUONG BACLUONG1
		{
			get
			{
				return this._BACLUONG1.Entity;
			}
			set
			{
				BACLUONG previousValue = this._BACLUONG1.Entity;
				if (((previousValue != value) 
							|| (this._BACLUONG1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BACLUONG1.Entity = null;
						previousValue.LUONGs.Remove(this);
					}
					this._BACLUONG1.Entity = value;
					if ((value != null))
					{
						value.LUONGs.Add(this);
						this._BacLuong = value.BacLuong1;
					}
					else
					{
						this._BacLuong = default(int);
					}
					this.SendPropertyChanged("BACLUONG1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.LUONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.LUONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG_K2")]
	public partial class LUONG_K2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private int _Thang;
		
		private int _Nam;
		
		private int _SoTiet;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnSoTietChanging(int value);
    partial void OnSoTietChanged();
    #endregion
		
		public LUONG_K2()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTiet", DbType="Int NOT NULL")]
		public int SoTiet
		{
			get
			{
				return this._SoTiet;
			}
			set
			{
				if ((this._SoTiet != value))
				{
					this.OnSoTietChanging(value);
					this.SendPropertyChanging();
					this._SoTiet = value;
					this.SendPropertyChanged("SoTiet");
					this.OnSoTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG_K2", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.LUONG_K2s.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.LUONG_K2s.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaCM;
		
		private string _MaPB;
		
		private string _MaCN;
		
		private string _MaTDHV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private string _QueQuan;
		
		private System.DateTime _NgaySinh;
		
		private string _SDT;
		
		private EntitySet<CT_HDLD> _CT_HDLDs;
		
		private EntitySet<LUONG> _LUONGs;
		
		private EntitySet<LUONG_K2> _LUONG_K2s;
		
		private EntitySet<NV_CV> _NV_CVs;
		
		private EntitySet<NV_TDNN> _NV_TDNNs;
		
		private EntityRef<CHINHANH> _CHINHANH;
		
		private EntityRef<CHUYENMON> _CHUYENMON;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
		private EntityRef<TDHV> _TDHV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaCMChanging(string value);
    partial void OnMaCMChanged();
    partial void OnMaPBChanging(string value);
    partial void OnMaPBChanged();
    partial void OnMaCNChanging(string value);
    partial void OnMaCNChanged();
    partial void OnMaTDHVChanging(string value);
    partial void OnMaTDHVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CT_HDLDs = new EntitySet<CT_HDLD>(new Action<CT_HDLD>(this.attach_CT_HDLDs), new Action<CT_HDLD>(this.detach_CT_HDLDs));
			this._LUONGs = new EntitySet<LUONG>(new Action<LUONG>(this.attach_LUONGs), new Action<LUONG>(this.detach_LUONGs));
			this._LUONG_K2s = new EntitySet<LUONG_K2>(new Action<LUONG_K2>(this.attach_LUONG_K2s), new Action<LUONG_K2>(this.detach_LUONG_K2s));
			this._NV_CVs = new EntitySet<NV_CV>(new Action<NV_CV>(this.attach_NV_CVs), new Action<NV_CV>(this.detach_NV_CVs));
			this._NV_TDNNs = new EntitySet<NV_TDNN>(new Action<NV_TDNN>(this.attach_NV_TDNNs), new Action<NV_TDNN>(this.detach_NV_TDNNs));
			this._CHINHANH = default(EntityRef<CHINHANH>);
			this._CHUYENMON = default(EntityRef<CHUYENMON>);
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			this._TDHV = default(EntityRef<TDHV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCM", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaCM
		{
			get
			{
				return this._MaCM;
			}
			set
			{
				if ((this._MaCM != value))
				{
					if (this._CHUYENMON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCMChanging(value);
					this.SendPropertyChanging();
					this._MaCM = value;
					this.SendPropertyChanged("MaCM");
					this.OnMaCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCN", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaCN
		{
			get
			{
				return this._MaCN;
			}
			set
			{
				if ((this._MaCN != value))
				{
					if (this._CHINHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCNChanging(value);
					this.SendPropertyChanging();
					this._MaCN = value;
					this.SendPropertyChanged("MaCN");
					this.OnMaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTDHV", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaTDHV
		{
			get
			{
				return this._MaTDHV;
			}
			set
			{
				if ((this._MaTDHV != value))
				{
					if (this._TDHV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTDHVChanging(value);
					this.SendPropertyChanging();
					this._MaTDHV = value;
					this.SendPropertyChanged("MaTDHV");
					this.OnMaTDHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CT_HDLD", Storage="_CT_HDLDs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<CT_HDLD> CT_HDLDs
		{
			get
			{
				return this._CT_HDLDs;
			}
			set
			{
				this._CT_HDLDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG", Storage="_LUONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<LUONG> LUONGs
		{
			get
			{
				return this._LUONGs;
			}
			set
			{
				this._LUONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LUONG_K2", Storage="_LUONG_K2s", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<LUONG_K2> LUONG_K2s
		{
			get
			{
				return this._LUONG_K2s;
			}
			set
			{
				this._LUONG_K2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NV_CV", Storage="_NV_CVs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<NV_CV> NV_CVs
		{
			get
			{
				return this._NV_CVs;
			}
			set
			{
				this._NV_CVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NV_TDNN", Storage="_NV_TDNNs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<NV_TDNN> NV_TDNNs
		{
			get
			{
				return this._NV_TDNNs;
			}
			set
			{
				this._NV_TDNNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHINHANH_NHANVIEN", Storage="_CHINHANH", ThisKey="MaCN", OtherKey="MaCN", IsForeignKey=true)]
		public CHINHANH CHINHANH
		{
			get
			{
				return this._CHINHANH.Entity;
			}
			set
			{
				CHINHANH previousValue = this._CHINHANH.Entity;
				if (((previousValue != value) 
							|| (this._CHINHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHINHANH.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHINHANH.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaCN = value.MaCN;
					}
					else
					{
						this._MaCN = default(string);
					}
					this.SendPropertyChanged("CHINHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUYENMON_NHANVIEN", Storage="_CHUYENMON", ThisKey="MaCM", OtherKey="MaCM", IsForeignKey=true)]
		public CHUYENMON CHUYENMON
		{
			get
			{
				return this._CHUYENMON.Entity;
			}
			set
			{
				CHUYENMON previousValue = this._CHUYENMON.Entity;
				if (((previousValue != value) 
							|| (this._CHUYENMON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUYENMON.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUYENMON.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaCM = value.MaCM;
					}
					else
					{
						this._MaCM = default(string);
					}
					this.SendPropertyChanged("CHUYENMON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_PHONGBAN", ThisKey="MaPB", OtherKey="MaPB", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaPB = value.MaPB;
					}
					else
					{
						this._MaPB = default(string);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDHV_NHANVIEN", Storage="_TDHV", ThisKey="MaTDHV", OtherKey="MaTDHV", IsForeignKey=true)]
		public TDHV TDHV
		{
			get
			{
				return this._TDHV.Entity;
			}
			set
			{
				TDHV previousValue = this._TDHV.Entity;
				if (((previousValue != value) 
							|| (this._TDHV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TDHV.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TDHV.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaTDHV = value.MaTDHV;
					}
					else
					{
						this._MaTDHV = default(string);
					}
					this.SendPropertyChanged("TDHV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDLDs(CT_HDLD entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CT_HDLDs(CT_HDLD entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_LUONGs(LUONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_LUONG_K2s(LUONG_K2 entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_LUONG_K2s(LUONG_K2 entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NV_CVs(NV_CV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NV_CVs(NV_CV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NV_TDNNs(NV_TDNN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NV_TDNNs(NV_TDNN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NV_CV")]
	public partial class NV_CV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaCV;
		
		private System.DateTime _NgayDamNhiem;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaCVChanging(string value);
    partial void OnMaCVChanged();
    partial void OnNgayDamNhiemChanging(System.DateTime value);
    partial void OnNgayDamNhiemChanged();
    #endregion
		
		public NV_CV()
		{
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDamNhiem", DbType="Date NOT NULL")]
		public System.DateTime NgayDamNhiem
		{
			get
			{
				return this._NgayDamNhiem;
			}
			set
			{
				if ((this._NgayDamNhiem != value))
				{
					this.OnNgayDamNhiemChanging(value);
					this.SendPropertyChanging();
					this._NgayDamNhiem = value;
					this.SendPropertyChanged("NgayDamNhiem");
					this.OnNgayDamNhiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NV_CV", Storage="_CHUCVU", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NV_CVs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NV_CVs.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NV_CV", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NV_CVs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NV_CVs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NV_TDNN")]
	public partial class NV_TDNN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaTDNN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<TDNN> _TDNN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaTDNNChanging(string value);
    partial void OnMaTDNNChanged();
    #endregion
		
		public NV_TDNN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._TDNN = default(EntityRef<TDNN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTDNN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTDNN
		{
			get
			{
				return this._MaTDNN;
			}
			set
			{
				if ((this._MaTDNN != value))
				{
					if (this._TDNN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTDNNChanging(value);
					this.SendPropertyChanging();
					this._MaTDNN = value;
					this.SendPropertyChanged("MaTDNN");
					this.OnMaTDNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NV_TDNN", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NV_TDNNs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NV_TDNNs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDNN_NV_TDNN", Storage="_TDNN", ThisKey="MaTDNN", OtherKey="MaTDNN", IsForeignKey=true)]
		public TDNN TDNN
		{
			get
			{
				return this._TDNN.Entity;
			}
			set
			{
				TDNN previousValue = this._TDNN.Entity;
				if (((previousValue != value) 
							|| (this._TDNN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TDNN.Entity = null;
						previousValue.NV_TDNNs.Remove(this);
					}
					this._TDNN.Entity = value;
					if ((value != null))
					{
						value.NV_TDNNs.Add(this);
						this._MaTDNN = value.MaTDNN;
					}
					else
					{
						this._MaTDNN = default(string);
					}
					this.SendPropertyChanged("TDNN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGBAN")]
	public partial class PHONGBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPB;
		
		private string _TenPB;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPBChanging(string value);
    partial void OnMaPBChanged();
    partial void OnTenPBChanging(string value);
    partial void OnTenPBChanged();
    #endregion
		
		public PHONGBAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPB", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenPB
		{
			get
			{
				return this._TenPB;
			}
			set
			{
				if ((this._TenPB != value))
				{
					this.OnTenPBChanging(value);
					this.SendPropertyChanging();
					this._TenPB = value;
					this.SendPropertyChanged("TenPB");
					this.OnTenPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaPB", OtherKey="MaPB")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDHV")]
	public partial class TDHV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTDHV;
		
		private string _TenTDHV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTDHVChanging(string value);
    partial void OnMaTDHVChanged();
    partial void OnTenTDHVChanging(string value);
    partial void OnTenTDHVChanged();
    #endregion
		
		public TDHV()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTDHV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTDHV
		{
			get
			{
				return this._MaTDHV;
			}
			set
			{
				if ((this._MaTDHV != value))
				{
					this.OnMaTDHVChanging(value);
					this.SendPropertyChanging();
					this._MaTDHV = value;
					this.SendPropertyChanged("MaTDHV");
					this.OnMaTDHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTDHV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTDHV
		{
			get
			{
				return this._TenTDHV;
			}
			set
			{
				if ((this._TenTDHV != value))
				{
					this.OnTenTDHVChanging(value);
					this.SendPropertyChanging();
					this._TenTDHV = value;
					this.SendPropertyChanged("TenTDHV");
					this.OnTenTDHVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDHV_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaTDHV", OtherKey="MaTDHV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TDHV = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TDHV = null;
		}
	}
}
#pragma warning restore 1591
